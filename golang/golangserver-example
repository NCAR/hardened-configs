 ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA !DES-CBC3-SHAckage main

 import (
         "crypto/tls"
             "log"
                 "net/http"
     )

 func main() {
     mux := http.NewServeMux()
     mux.HandleFunc("/", func(w http.ResponseWriter, req *http.Request) {
                 w.Header().Add("Strict-Transport-Security", "max-age=63072000; includeSubDomains")
                         w.Write([]byte("This is an example server.\n"))
                             })
     cfg := &tls.Config{
                  MinVersion:               tls.VersionTLS12,
                  CurvePreferences:         []tls.CurveID{tls.CurveP521, tls.CurveP384, tls.CurveP256},
                  PreferServerCipherSuites: true,
                  CipherSuites: []uint16{
                              tls.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
                              tls.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,
                              tls.TLS_RSA_WITH_AES_256_GCM_SHA384,
                              tls.TLS_RSA_WITH_AES_256_CBC_SHA,
                          },
              }
     srv := &http.Server{
                  Addr:         ":443",
                  Handler:      mux,
                  TLSConfig:    cfg,
                  TLSNextProto: make(map[string]func(*http.Server, *tls.Conn, http.Handler), 0),
              }
     log.Fatal(srv.ListenAndServeTLS("tls.crt", "tls.key"))
 }
